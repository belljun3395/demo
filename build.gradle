plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.8.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation "org.springframework.modulith:spring-modulith-starter-core"
    implementation "org.springframework.modulith:spring-modulith-starter-jpa"

    runtimeOnly 'com.h2database:h2'
    implementation 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.22.0'
    testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

spotless {
    java {
        importOrder()
        removeUnusedImports()
        trimTrailingWhitespace()
        googleJavaFormat('1.12.0')
        indentWithTabs(2)
        endWithNewline()
        target 'src/*/java/**/*.java'
    }

    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        targetExclude '.release/*.*'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.modulith:spring-modulith-bom:1.2.0"
    }
}
